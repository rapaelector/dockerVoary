$tr-even-background: rgba(0, 0, 0, 0.05);
$tr-odd-background: #fff;
$table-cell-backgroud: rgba(0, 0, 0, 0.12);

@mixin datatable_table () {
    .app-dt-list {
        /**
         * Remove card body padding to have more space for the datatable
        */
        padding: 0;
        .btn {
            &.buttons-colvis {
                &.btn-outline-app-primary {
                    background: none;
                }
            }
        }
        .btn-outline-app-primary:hover {
            color: $app-primary;
            background: none;
        }
        .dataTables_scroll {
            overflow-x: auto;
        }
        table.dataTable {
            margin-top: 0 !important;
            thead, tbody {
                tr {
                    th, td {
                        vertical-align: middle;
                        height: 22px;
                        max-height: 22px;
                        .img-circle {
                            width: 24px;
                            height: 24px;
                            object-fit: cover;
                        }
                        .dropdown {
                            display: inline-block;
                            [data-toggle="dropdown"] {
                                padding: 0px !important;
                                .material-icons {
                                    font-size: 20px;
                                }
                            }
                        }
                    }
                }
            }
            thead {
                tr {
                    th {
                        border-top: none;
                    }
                }
            }
            tbody {
                tr {
                    max-height: 30px !important;
                    height: 30px !important;
                    td {
                        line-height: 1;
                        padding-top: 1px !important;
                        padding-bottom: 1px !important;
                    }
                }
                tr:first-child {
                    border-left: 0;
                }
                tr:last-child {
                    border-right: 0;
                }
            }
        }

        /**
         * Here are a style to design the border right and left of dataTable for the table body
         * ex-change the background of tr even and odd
        */
        .dataTables_scroll {
            .dataTables_scrollHead {
                .table {
                    tr {
                        background: $tr-even-background;
                    }
                }
            }
            .dataTables_scrollBody {
                .table {
                    border-left: none;
                }
                .table-striped {
                    tbody {
                        tr:nth-of-type(odd) {
                            background: #fff;
                            td:first-child {
                                border-left: none;
                            }
                            td:last-child {
                                border-right: none;
                            }
                        }
                        tr:nth-of-type(even) {
                            background: $tr-even-background;
                            td:first-child {
                                border-left: 1px solid $table-cell-backgroud;
                            }
                            td:last-child {
                                border-right: 1px solid $table-cell-backgroud;
                            }
                        }
                    }
                }
            }
        }
        /**
         * Change background of tr by type for the fixed right column
         * tr of type odd : white background
         * tr of type even : smoothest grey (gris)
         * 
         * For the fixed column header first then for the body (action container) 
        */
        // for the fixed column header
        .DTFC_RightHeadWrapper {
            .table {
                thead {
                    tr {
                        th.sorting_disabled {
                            background: $tr-even-background !important;
                        }
                    }
                }
            }
        }
        /**
         * For the fixed column body
        */
        .DTFC_RightBodyWrapper { // div
            .table {
                tbody {
                    tr {
                        border: none !important;
                    }
                    tr:nth-of-type(odd) {
                        background: #fff;
                        td {
                            border-right: none !important;
                        }
                    }
                    tr:nth-of-type(even) {
                        background: $tr-even-background;
                        td {
                            border-right: 1px solid rgba(0, 0, 0, 0.12) !important;
                        }
                    }
                }
            }
        }

        /**
         * Datatable list footer disegn
         * Pagination and item info
        */
        .dataTables_paginate {
            li.paginate_button.page-item {
                a.page-link {
                    height: 35px;
                    line-height: 35px;
                    padding: 0 16px;
                }
                &.previous, &.next {
                    a.page-link {
                        padding: 4px 12px;
                    }
                }
                &.active {
                    a.page-link {
                        background: $app-primary;
                        border-color: $app-primary;
                    }
                }
            }
        }

        /**
         * Customize text filter
        */
        .buttons-collection, .clear-filter-button {
            padding: 3px 6px !important;
            border: 1px solid $border-color;
            background: #fff !important;
            color: #000;
        }
    }
    /**
     * Change design for the input filter
     * Change input filter height, border-color, border-color when focused
     * The app-filters is not in .app-dt-card wrapper
    */
    .app-filters-container table.table tbody tr {
        td {
            border: none;
            input, select {
                height: 30px;
                border: 1px solid #dee2e6;
                border-radius: 0;
                padding-left: 4px;
                border-right: none;
                &:focus {
                    border: 1px solid $app-primary;
                }
            }
            &:last-child {
                input {
                    border-right: 1px solid #dee2e6;
                }
            }
        }
    }
    #contacts-table {
        thead {
            tr {
                background: $tr-even-background;
                th {
                    border-bottom: none;
                    border: 1px solid $table-cell-backgroud;
                    &:not(last-child) {
                        border-right: none;
                    }
                }
            }
        }
        tbody {
            @include tr_style($tr-odd-background, $tr-even-background);
            tr:first-child {
                td {
                    border-top: none;
                }
            }
            tr:nth-of-type(even) {
                td {
                    border: 1px solid $table-cell-backgroud;
                }
            }
        }
    }
}

@include media-breakpoint-only(sm) {
    .app-dt-list {
        .table-action {
            .col-lg-6 {
                order: -1;
            }
        }
        .table-action {
            .dataTables_filter {
                text-align: right !important;
            }
            .dataTables_length {
                text-align: left !important;
            }
        }
        /**
        * Datatable list info text-left and remove padding
        */
        .dataTables_info {
            text-align: left !important;
            padding: 0;
        }
    }
    /**
    * Change justify context to flex-end
    */
    div.dataTables_wrapper .app-dt-list div.dataTables_paginate ul.pagination {
        justify-content: flex-end !important;
    }
}

@include media-breakpoint-only(xs) {
    .app-dt-list {
        .dt-buttons.btn-group {
            justify-content: center;
            padding: 0;
            .btn-group {
                padding: 0;
            }
        }
        .buttons-collection, .clear-filter-button, .btn-group {
            padding: 6px 12px;
            max-width: 100%;
            width: 100%;
        }
        .buttons-collection {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .table-action {
            .dataTables_filter, .dataTables_length {
                text-align: center;
                label {
                    display: flex;
                    width: 100%;
                    align-items: center;
                    input {
                        flex: 1 1 0;
                    }
                }
            }
            .dataTables_length select {
                margin: 0 8px;
            }
        }
        /**
        * Datatable list info text-left and remove padding
        */
        .dataTables_info {
            text-align: left !important;
            padding: 0;
        }
    }
    /**
    * Change justify context to flex-end
    */
    div.dataTables_wrapper .app-dt-list div.dataTables_paginate ul.pagination {
        justify-content: flex-end !important;
    }
}

@mixin tr_style ($oddBackground, $evenBackground) {
    tr:nth-of-type(odd) {
        background: $oddBackground;
        td {
            border-right: none !important;
        }
    }
    tr:nth-of-type(even) {
        background: $evenBackground;
        td {
            border-right: 1px solid rgba(0, 0, 0, 0.12) !important;
        }
    }
}
@mixin datatableTable {
    @include datatable_table;
}

@include datatableTable;